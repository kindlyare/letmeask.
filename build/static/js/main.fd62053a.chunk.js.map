{"version":3,"sources":["services/firebase.ts","contexts/AuthContext.tsx","assets/images/illustration.svg","assets/images/logo.svg","assets/images/google-icon.svg","components/Button.tsx","hooks/useAuth.ts","components/Notifications.tsx","pages/Home.tsx","pages/NewRoom.tsx","components/Question.tsx","assets/images/copy.svg","components/RoomCode.tsx","hooks/useRoom.ts","pages/Room.tsx","assets/images/delete.svg","assets/images/check.svg","assets/images/answer.svg","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","props","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","children","Button","isOutlined","className","useAuth","useContext","notifyErrorCode","toast","error","duration","position","style","icon","iconTheme","primary","secondary","ariaProps","role","errorRoom","Home","navigate","useNavigate","roomCode","setRoomCode","e","preventDefault","trim","ref","get","roomRef","exists","val","endedAt","src","illustrationImg","alt","logoImg","onClick","googleIconImg","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","push","title","authorId","firebaseRoom","key","to","Question","content","author","isAnswered","isHighlighted","cx","answered","highlighted","RoomCode","navigator","clipboard","writeText","code","copyImg","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","firebaseQuestions","parsedQuestions","Object","entries","map","likesCount","values","likes","length","LikeId","find","off","Room","params","useParams","newQuestion","setNewQuestion","Error","question","isAnwered","questionId","remove","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","Date","window","confirm","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd62053a.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\n\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n const auth = firebase.auth();\r\n const database = firebase.database();\r\n\r\n export { firebase, auth, database }\r\n\r\n\r\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { auth, firebase } from \"../services/firebase\";\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string | null;\r\n  avatar: string | null; \r\n}\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  signInWithPopup: () => Promise<void>;\r\n}\r\n\r\ntype AuthContextProviderProps = {\r\n  children: ReactNode\r\n}\r\nexport const AuthContext = createContext({} as AuthContextType );\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user\r\n  \r\n        setUser ({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL\r\n        })\r\n      }\r\n    })\r\n      return () => {\r\n        unsubscribe();\r\n      }\r\n  }, [])\r\n\r\n  async function signInWithPopup() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    \r\n    const result = await auth.signInWithPopup(provider);\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user\r\n\r\n      setUser ({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signInWithPopup }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import { ButtonHTMLAttributes } from 'react';\r\n\r\nimport '../styles/button.scss';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  isOutlined?: boolean\r\n};\r\n\r\nexport function Button({isOutlined = false, ...props}: ButtonProps) {\r\n  return (\r\n    <button \r\n      className={`button ${isOutlined? 'outlined' : ''}`} \r\n      {...props} \r\n    />\r\n  )\r\n}\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\n\r\nexport function useAuth() {\r\n  const value = useContext(AuthContext)\r\n\r\n  return value;\r\n}","import toast from 'react-hot-toast';\r\n\r\nexport const notifyErrorCode = () => toast.error('Código Invalido');\r\nexport const notifyErrorRoom = () => toast.error('Essa sala já foi encerrada');\r\n\r\n\r\nexport function error() {\r\n  toast.error('Código Invalida', {\r\n    duration: 1700,\r\n    position: 'top-center',\r\n    // Styling\r\n    style: {},\r\n    className: 'error',\r\n    icon: '❌',\r\n  // Change colors of success/error/loading icon\r\n    iconTheme: {\r\n      primary: '#000',\r\n      secondary: '#fff',\r\n    },\r\n    // Aria\r\n    ariaProps: {\r\n      role: 'status',\r\n      'aria-live': 'polite',\r\n    },\r\n  });\r\n}\r\n\r\nexport function errorRoom() {\r\n  toast.error('Essa sala já foi encerrada', {\r\n    duration: 1700,\r\n    position: 'top-center',\r\n    // Styling\r\n    style: {},\r\n    className: 'error',\r\n    icon: '❌',\r\n  // Change colors of success/error/loading icon\r\n    iconTheme: {\r\n      primary: '#000',\r\n      secondary: '#fff',\r\n    },\r\n    // Aria\r\n    ariaProps: {\r\n      role: 'status',\r\n      'aria-live': 'polite',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n","import { FormEvent, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { database } from '../services/firebase'\r\n\r\nimport illustrationImg from '../assets/images/illustration.svg'\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport googleIconImg from '../assets/images/google-icon.svg'\r\n\r\nimport { Button } from '../components/Button'\r\n\r\nimport '../styles/auth.scss'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { error, errorRoom } from '../components/Notifications'\r\n\r\nexport function Home() {\r\n  const navigate = useNavigate();\r\n  const { user, signInWithPopup } = useAuth();\r\n  const [roomCode, setRoomCode] = useState('');\r\n\r\n  async function handleCreateRoom() {\r\n    if(!user) {\r\n      await signInWithPopup()\r\n    }\r\n\r\n    navigate('rooms/new')\r\n}\r\n\r\n  async function handleJoinRoom(e: FormEvent) {\r\n    e.preventDefault();\r\n    \r\n    if (roomCode.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const roomRef = await database.ref(`rooms/${roomCode}`).get()\r\n\r\n    if(!roomRef.exists()){\r\n      error()\r\n      return;\r\n    }\r\n\r\n    if (roomRef.val().endedAt) {\r\n      errorRoom()\r\n      return;\r\n    }\r\n\r\n    navigate(`Rooms/${roomCode}`)\r\n  }\r\n\r\n    return(\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n        <img src={illustrationImg} alt=\"Ilustração perguntas e respostas\" />  \r\n        <strong>  Toda pergunta tem uma resposta. </strong>\r\n        <p> Tire as dúvidas da sua audiência</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <button onClick={handleCreateRoom} className=\"create-room\">\r\n            <img src={googleIconImg} alt=\"Logo do google\" />\r\n            Crie sua sala com o Google\r\n          </button>\r\n          <div className=\"separator\"> ou entre em uma sala</div>\r\n          <form onSubmit={handleJoinRoom}>\r\n            <Toaster />\r\n            <span></span>\r\n            <input type=\"text\" \r\n              name=\"\" \r\n              id=\"\" \r\n              placeholder=\"digite o código da sala\" \r\n              onChange={e => setRoomCode(e.target.value)}\r\n              value={roomCode}\r\n            />\r\n            <Button type=\"submit\">\r\n              Entrar\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { FormEvent, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport illustrationImg from '../assets/images/illustration.svg'\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport { database } from '../services/firebase'\r\n\r\nimport { Button } from '../components/Button'\r\n\r\n\r\nimport '../styles/auth.scss'\r\n\r\nexport function NewRoom() {\r\n  const { user } = useAuth(); // autentificador de sala\r\n  const navigate = useNavigate(); // para navegar para uma página\r\n  const [ newRoom, setNewRoom] = useState(''); // para mudar o estado \r\n\r\n  async function handleCreateRoom(e: FormEvent) { // e = evento da função\r\n    e.preventDefault(); // preventDefault = tira a função padrão da propriedade HTML\r\n\r\n    if (newRoom.trim() === '') { // toda essa função é para não criarem sala sem ter nada no input\r\n      return;\r\n    }\r\n\r\n    const roomRef = database.ref('rooms') // ref = cria uma tabela chamada 'rooms'\r\n\r\n    const firebaseRoom = await roomRef.push({ // push = empurra informação pra dentro\r\n      title: newRoom,\r\n      authorId: user?.id,\r\n    })\r\n\r\n    navigate(`/rooms/${firebaseRoom.key}`) // key = id da sala\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n        <img src={illustrationImg} alt=\"Ilustração perguntas e respostas\" />  \r\n        <strong>  Toda pergunta tem uma resposta. </strong>\r\n        <p> Tire as dúvidas da sua audiência</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <h2 className=\"\">Criar uma nova sala</h2>\r\n          <form onSubmit={handleCreateRoom}>\r\n          <Toaster />\r\n            <input type=\"text\" \r\n              name=\"\" \r\n              id=\"\" \r\n              placeholder=\"Nome da sala\"\r\n              onChange={e => setNewRoom(e.target.value)}\r\n              value={newRoom}\r\n            />\r\n            <Button type=\"submit\">\r\n              Criar sala\r\n            </Button>\r\n          </form>\r\n          <p>\r\n            Quer entrar em uma sala existente? <Link to=\"/\">clique aqui</Link>\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}","import { ReactNode } from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport '../styles/question.scss'\r\n\r\ntype QuestionProps = {\r\n  content: string;\r\n  author: {\r\n    name:string;\r\n    avatar:string;\r\n  };\r\n  children?: ReactNode;\r\n  isAnswered?: boolean;\r\n  isHighlighted?: boolean;\r\n}\r\n\r\nexport function Question({\r\n  content,\r\n  author,\r\n  isAnswered = false,\r\n  isHighlighted = false,\r\n  children,\r\n\r\n}: QuestionProps) {\r\n  return(\r\n    <div \r\n    className={cx(\r\n      'question', \r\n      {answered: isAnswered},\r\n      {highlighted: isHighlighted && !isAnswered}  ,\r\n      )}\r\n    >\r\n      <p>{content}</p>\r\n      <footer>\r\n        <div className=\"user-info\">\r\n          <img src={author.avatar} alt={author.name} />\r\n          <span>{author.name}</span>\r\n        </div>\r\n        <div>\r\n          {children}\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../assets/images/copy.svg';\r\n\r\nimport '../styles/room-code.scss';\r\n\r\ntype RoomCodeProps = {\r\n  code: string;\r\n}\r\n\r\nexport function RoomCode (props: RoomCodeProps) {\r\n  function copyRoomCodeToClipboard() {\r\n    navigator.clipboard.writeText(props.code)\r\n  }\r\n\r\n  return(\r\n    <button className=\"room-code\" onClick={copyRoomCodeToClipboard}>\r\n      <div>\r\n        <img src={copyImg} alt=\"Copiar Room\" />\r\n      </div>\r\n      <span>Sala #{props.code}</span>\r\n    </button>\r\n  )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  }\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n  likes: Record<string, {\r\n    authorId: string;\r\n  }>\r\n}>\r\n\r\ntype QuestionProps = {\r\n  id:string;\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  }\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n  likesCount: number;\r\n  LikeId: string | undefined;\r\n}\r\n\r\nexport function useRoom (roomId: string) {\r\n  const { user } = useAuth();\r\n  const [questions, setQuestions] = useState<QuestionProps[]>([]) // <> = sinal de Array\r\n  const [title, setTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomId}`) //\r\n\r\n    roomRef.on('value', room =>{\r\n      const databaseRoom= room.val();\r\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n\r\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n        return{\r\n          id: key,\r\n          content: value.content,\r\n          author: value.author,\r\n          isHighlighted: value.isHighlighted,\r\n          isAnswered: value.isAnswered,\r\n          likesCount: Object.values(value.likes ?? {}).length,\r\n          LikeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0]\r\n        };\r\n      })\r\n\r\n      setTitle(databaseRoom.title)\r\n      setQuestions(parsedQuestions)\r\n      \r\n    })\r\n\r\n    return() => {\r\n      roomRef.off('value')\r\n    }\r\n\r\n  }, [roomId, user?.id]);\r\n\r\n  return{questions, title }\r\n}","import { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'; \r\nimport logoImg from '../assets/images/logo.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { notifyErrorCode } from '../components/Notifications';\r\nimport { Question } from '../components/Question';\r\n\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\n\r\nexport function Room () {\r\n  const { user } = useAuth();\r\n  const params = useParams();\r\n  const [newQuestion, setNewQuestion] = useState(''); // useState = alterar estado e setar como novo\r\n  const roomId = params.id;\r\n\r\n  const { title, questions } = useRoom(roomId as string)\r\n\r\n  async function handleSendQuestion(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (newQuestion.trim() === ''){\r\n      return;\r\n    }\r\n\r\n    if (!user){\r\n      throw new Error (notifyErrorCode()) \r\n    }\r\n\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHighlighted: false,\r\n      isAnwered: false\r\n    };\r\n\r\n    await database.ref(`rooms/${roomId}/questions`).push(question); // cria uma nova arvore no firebase\r\n    \r\n    setNewQuestion('');\r\n  }\r\n\r\n  async function handleLikeQuestion(questionId: string, LikeId: string | undefined) {\r\n    if (LikeId) {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${LikeId}`).remove()\r\n    } else {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\r\n        authorId: user?.id\r\n      });\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <RoomCode code={roomId as string}/>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>\r\n            Sala {title}\r\n            {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n          </h1>\r\n        </div>\r\n\r\n        <form onSubmit={handleSendQuestion}>\r\n          <textarea\r\n            placeholder=\"O que quer perguntar?\"\r\n            onChange={e => setNewQuestion(e.target.value)}\r\n            value={newQuestion}\r\n          />\r\n          <div className=\"form-footer\">\r\n            { user ? (\r\n              <div className='user-info'>\r\n                <img src={user.avatar as string}  alt={user.name as string}  />\r\n                <span>{user.name}</span>\r\n              </div>\r\n            ) : (\r\n              <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n            ) }\r\n            \r\n            <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n          </div>\r\n        </form>\r\n        <div className=\"question-list\">\r\n        {questions.map(question => {\r\n          return(\r\n            <Question\r\n              key={question.id}\r\n              content={question.content}\r\n              author={question.author}\r\n              isAnswered={question.isAnswered}\r\n              isHighlighted={question.isHighlighted}\r\n            >\r\n              { !question.isAnswered && (<button \r\n                className={`like-button ${question.LikeId ? 'liked' : ''}`}\r\n                type='button'\r\n                aria-label='Marcar como gostei'\r\n                onClick={() => handleLikeQuestion(question.id, question.LikeId)}\r\n              >\r\n                { question.likesCount > 0 && <span>{question.likesCount}</span> }\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                </svg>\r\n              </button>)}\r\n            </Question>\r\n          );\r\n        })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import { FormEvent, useState } from 'react';\r\nimport {  useNavigate, useParams } from 'react-router-dom'; \r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deleteImg from '../assets/images/delete.svg'\r\nimport checkImg from '../assets/images/check.svg'\r\nimport answerImg from '../assets/images/answer.svg'\r\n\r\n\r\nimport { Button } from '../components/Button';\r\nimport { notifyErrorCode } from '../components/Notifications';\r\nimport { Question } from '../components/Question';\r\n\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\n\r\nexport function AdminRoom () {\r\n  const navigate = useNavigate()\r\n  const { user } = useAuth();\r\n  const params = useParams();\r\n  const [newQuestion, setNewQuestion] = useState(''); // useState = alterar estado e setar como novo\r\n  const roomId = params.id;\r\n\r\n  const { title, questions } = useRoom(roomId as string)\r\n\r\n  async function handleEndRoom() {\r\n    await database.ref(`rooms/${roomId}`).update({\r\n      endedAt: new Date(),\r\n    })\r\n\r\n    navigate('/');\r\n  };\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if (window.confirm('Tem certeza que...')) {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n    }\r\n  };\r\n\r\n  async function handleCheckQuestionAsAnswered(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isAnswered: true,\r\n    });\r\n    \r\n  }\r\n\r\n  async function handleHighlightQuestion(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isHighlighted: true,\r\n    });\r\n  }\r\n\r\n  async function handleSendQuestion(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (newQuestion.trim() === ''){\r\n      return;\r\n    }\r\n\r\n    if (!user){\r\n      throw new Error (notifyErrorCode()) \r\n    }\r\n\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHighlighted: false,\r\n      isAnwered: false\r\n    }\r\n\r\n    await database.ref(`rooms/${roomId}/questions`).push(question); // cria uma nova arvore no firebase\r\n    \r\n    setNewQuestion('');\r\n  };\r\n\r\n  return(\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <div>\r\n            <RoomCode code={roomId as string}/>\r\n            <Button isOutlined onClick={handleEndRoom}>Encerrar sala</Button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>\r\n            Sala {title}\r\n            {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n          </h1>\r\n        </div>\r\n        <div className=\"question-list\">\r\n        {questions.map(question => {\r\n          return(\r\n            <Question\r\n              key={question.id}\r\n              content={question.content}\r\n              author={question.author}\r\n              isAnswered={question.isAnswered}\r\n              isHighlighted={question.isHighlighted}\r\n\r\n            >\r\n              {/* <> = fragment, container sem HTML */}\r\n              {!question.isAnswered && (\r\n              <>\r\n                <button\r\n                  type='button'\r\n                  onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                >\r\n                  <img src={checkImg} alt=\"Marcar Pergunta\" />\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  onClick={() => handleHighlightQuestion(question.id)}\r\n                >\r\n                  <img src={answerImg} alt=\"Remover Pergunta\" />\r\n                </button>\r\n              </>\r\n              )}\r\n              <button\r\n                type='button'\r\n                onClick={() => handleDeleteQuestion(question.id)}\r\n              >\r\n                <img src={deleteImg} alt=\"Responder Pergunta\" />\r\n              </button>\r\n            </Question>\r\n          );\r\n        })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./contexts/AuthContext\";\n\nimport { Home } from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { Room } from \"./pages/Room\";\nimport { AdminRoom } from \"./pages/AdminRoom\";\n\n function App() {\n  \n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"rooms/new\" element={<NewRoom />} />\n          <Route path=\"rooms/:id\" element={<Room />} />\n          <Route path=\"admin/rooms/:id\" element={<AdminRoom />} />\n        </Routes>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './services/firebase'\n\nimport './styles/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}